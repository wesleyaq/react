// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-big-calugas-home-name: 'arrow-big-calugas-home';
$arrow-big-calugas-home-x: 0px;
$arrow-big-calugas-home-y: 13px;
$arrow-big-calugas-home-offset-x: 0px;
$arrow-big-calugas-home-offset-y: -13px;
$arrow-big-calugas-home-width: 15px;
$arrow-big-calugas-home-height: 17px;
$arrow-big-calugas-home-total-width: 47px;
$arrow-big-calugas-home-total-height: 36px;
$arrow-big-calugas-home-image: '../img/sprite.png';
$arrow-big-calugas-home: (0px, 13px, 0px, -13px, 15px, 17px, 47px, 36px, '../img/sprite.png', 'arrow-big-calugas-home', );
$arrow-breadcrumbs-pege-imei-name: 'arrow-breadcrumbs-pege-imei';
$arrow-breadcrumbs-pege-imei-x: 21px;
$arrow-breadcrumbs-pege-imei-y: 9px;
$arrow-breadcrumbs-pege-imei-offset-x: -21px;
$arrow-breadcrumbs-pege-imei-offset-y: -9px;
$arrow-breadcrumbs-pege-imei-width: 12px;
$arrow-breadcrumbs-pege-imei-height: 11px;
$arrow-breadcrumbs-pege-imei-total-width: 47px;
$arrow-breadcrumbs-pege-imei-total-height: 36px;
$arrow-breadcrumbs-pege-imei-image: '../img/sprite.png';
$arrow-breadcrumbs-pege-imei: (21px, 9px, -21px, -9px, 12px, 11px, 47px, 36px, '../img/sprite.png', 'arrow-breadcrumbs-pege-imei', );
$arrow-down-chat-sales-name: 'arrow-down-chat-sales';
$arrow-down-chat-sales-x: 21px;
$arrow-down-chat-sales-y: 0px;
$arrow-down-chat-sales-offset-x: -21px;
$arrow-down-chat-sales-offset-y: 0px;
$arrow-down-chat-sales-width: 17px;
$arrow-down-chat-sales-height: 9px;
$arrow-down-chat-sales-total-width: 47px;
$arrow-down-chat-sales-total-height: 36px;
$arrow-down-chat-sales-image: '../img/sprite.png';
$arrow-down-chat-sales: (21px, 0px, -21px, 0px, 17px, 9px, 47px, 36px, '../img/sprite.png', 'arrow-down-chat-sales', );
$arrow-down-concursos-name: 'arrow-down-concursos';
$arrow-down-concursos-x: 21px;
$arrow-down-concursos-y: 20px;
$arrow-down-concursos-offset-x: -21px;
$arrow-down-concursos-offset-y: -20px;
$arrow-down-concursos-width: 11px;
$arrow-down-concursos-height: 9px;
$arrow-down-concursos-total-width: 47px;
$arrow-down-concursos-total-height: 36px;
$arrow-down-concursos-image: '../img/sprite.png';
$arrow-down-concursos: (21px, 20px, -21px, -20px, 11px, 9px, 47px, 36px, '../img/sprite.png', 'arrow-down-concursos', );
$arrow-down-costo-cero-name: 'arrow-down-costo-cero';
$arrow-down-costo-cero-x: 0px;
$arrow-down-costo-cero-y: 0px;
$arrow-down-costo-cero-offset-x: 0px;
$arrow-down-costo-cero-offset-y: 0px;
$arrow-down-costo-cero-width: 21px;
$arrow-down-costo-cero-height: 13px;
$arrow-down-costo-cero-total-width: 47px;
$arrow-down-costo-cero-total-height: 36px;
$arrow-down-costo-cero-image: '../img/sprite.png';
$arrow-down-costo-cero: (0px, 0px, 0px, 0px, 21px, 13px, 47px, 36px, '../img/sprite.png', 'arrow-down-costo-cero', );
$arrow-down-select-name: 'arrow-down-select';
$arrow-down-select-x: 0px;
$arrow-down-select-y: 30px;
$arrow-down-select-offset-x: 0px;
$arrow-down-select-offset-y: -30px;
$arrow-down-select-width: 11px;
$arrow-down-select-height: 6px;
$arrow-down-select-total-width: 47px;
$arrow-down-select-total-height: 36px;
$arrow-down-select-image: '../img/sprite.png';
$arrow-down-select: (0px, 30px, 0px, -30px, 11px, 6px, 47px, 36px, '../img/sprite.png', 'arrow-down-select', );
$arrow-left-concursos-name: 'arrow-left-concursos';
$arrow-left-concursos-x: 38px;
$arrow-left-concursos-y: 0px;
$arrow-left-concursos-offset-x: -38px;
$arrow-left-concursos-offset-y: 0px;
$arrow-left-concursos-width: 9px;
$arrow-left-concursos-height: 11px;
$arrow-left-concursos-total-width: 47px;
$arrow-left-concursos-total-height: 36px;
$arrow-left-concursos-image: '../img/sprite.png';
$arrow-left-concursos: (38px, 0px, -38px, 0px, 9px, 11px, 47px, 36px, '../img/sprite.png', 'arrow-left-concursos', );
$arrow-left-header-name: 'arrow-left-header';
$arrow-left-header-x: 38px;
$arrow-left-header-y: 11px;
$arrow-left-header-offset-x: -38px;
$arrow-left-header-offset-y: -11px;
$arrow-left-header-width: 7px;
$arrow-left-header-height: 10px;
$arrow-left-header-total-width: 47px;
$arrow-left-header-total-height: 36px;
$arrow-left-header-image: '../img/sprite.png';
$arrow-left-header: (38px, 11px, -38px, -11px, 7px, 10px, 47px, 36px, '../img/sprite.png', 'arrow-left-header', );
$spritesheet-width: 47px;
$spritesheet-height: 36px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-big-calugas-home, $arrow-breadcrumbs-pege-imei, $arrow-down-chat-sales, $arrow-down-concursos, $arrow-down-costo-cero, $arrow-down-select, $arrow-left-concursos, $arrow-left-header, );
$spritesheet: (47px, 36px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
